plugins {
    id 'org.jetbrains.kotlin.jvm'
}
architectury {
    common(enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/examplemod.accesswidener")
}

repositories {
    // mavens for Create Fabric and dependencies
    maven { url = "https://mvn.devos.one/releases" } // Porting Lib releases
    maven { url = "https://mvn.devos.one/snapshots" } // Create and several dependencies
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
    maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven" } // Forge Config API Port

    maven { // Fabric ASM for Porting Lib
        url = "https://jitpack.io/"
        content { includeGroupAndSubgroups("com.github") }
    }

    maven { url = "https://maven.shedaniel.me" } // Cloth Config, REI
    maven { url = "https://maven.blamejared.com" } // JEI

    maven { url = "https://api.modrinth.com/maven" } // LazyDFU
    maven { url = "https://maven.terraformersmc.com/releases" }
    mavenCentral() // Mod Menu, EMI
}

dependencies {
    modImplementation("net.fabricmc:fabric-loader:$fabric_loader_version")

    modCompileOnly("com.simibubi.create:create-fabric-$minecraft_version:$create_fabric_version")

    implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:$mixin_extras_version"))
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

sourceSets.main {
    java{

    }

    resources {
        srcDir 'src/generated/resources'
        exclude ".cache"
    }
}
kotlin {
    jvmToolchain(17)
}
